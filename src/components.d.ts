/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface ZprButton {
    'disabled': boolean;
  }
  interface ZprButtonAttributes extends StencilHTMLAttributes {
    'disabled'?: boolean;
  }

  interface ZprDropdown {
    'title': string;
  }
  interface ZprDropdownAttributes extends StencilHTMLAttributes {
    'onOnToggle'?: (event: CustomEvent) => void;
    'title'?: string;
  }

  interface FancyTabs {}
  interface FancyTabsAttributes extends StencilHTMLAttributes {}

  interface ProgressBar {
    'max': number;
    'value': number;
  }
  interface ProgressBarAttributes extends StencilHTMLAttributes {
    'max'?: number;
    'value'?: number;
  }

  interface ZprTab {
    'active': boolean;
    'disabled': boolean;
    'label': string;
  }
  interface ZprTabAttributes extends StencilHTMLAttributes {
    'active'?: boolean;
    'disabled'?: boolean;
    'label'?: string;
  }

  interface ZprTabs {
    'openTab': (index: number) => void;
  }
  interface ZprTabsAttributes extends StencilHTMLAttributes {
    'onChange'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ZprButton': Components.ZprButton;
    'ZprDropdown': Components.ZprDropdown;
    'FancyTabs': Components.FancyTabs;
    'ProgressBar': Components.ProgressBar;
    'ZprTab': Components.ZprTab;
    'ZprTabs': Components.ZprTabs;
  }

  interface StencilIntrinsicElements {
    'zpr-button': Components.ZprButtonAttributes;
    'zpr-dropdown': Components.ZprDropdownAttributes;
    'fancy-tabs': Components.FancyTabsAttributes;
    'progress-bar': Components.ProgressBarAttributes;
    'zpr-tab': Components.ZprTabAttributes;
    'zpr-tabs': Components.ZprTabsAttributes;
  }


  interface HTMLZprButtonElement extends Components.ZprButton, HTMLStencilElement {}
  var HTMLZprButtonElement: {
    prototype: HTMLZprButtonElement;
    new (): HTMLZprButtonElement;
  };

  interface HTMLZprDropdownElement extends Components.ZprDropdown, HTMLStencilElement {}
  var HTMLZprDropdownElement: {
    prototype: HTMLZprDropdownElement;
    new (): HTMLZprDropdownElement;
  };

  interface HTMLFancyTabsElement extends Components.FancyTabs, HTMLStencilElement {}
  var HTMLFancyTabsElement: {
    prototype: HTMLFancyTabsElement;
    new (): HTMLFancyTabsElement;
  };

  interface HTMLProgressBarElement extends Components.ProgressBar, HTMLStencilElement {}
  var HTMLProgressBarElement: {
    prototype: HTMLProgressBarElement;
    new (): HTMLProgressBarElement;
  };

  interface HTMLZprTabElement extends Components.ZprTab, HTMLStencilElement {}
  var HTMLZprTabElement: {
    prototype: HTMLZprTabElement;
    new (): HTMLZprTabElement;
  };

  interface HTMLZprTabsElement extends Components.ZprTabs, HTMLStencilElement {}
  var HTMLZprTabsElement: {
    prototype: HTMLZprTabsElement;
    new (): HTMLZprTabsElement;
  };

  interface HTMLElementTagNameMap {
    'zpr-button': HTMLZprButtonElement
    'zpr-dropdown': HTMLZprDropdownElement
    'fancy-tabs': HTMLFancyTabsElement
    'progress-bar': HTMLProgressBarElement
    'zpr-tab': HTMLZprTabElement
    'zpr-tabs': HTMLZprTabsElement
  }

  interface ElementTagNameMap {
    'zpr-button': HTMLZprButtonElement;
    'zpr-dropdown': HTMLZprDropdownElement;
    'fancy-tabs': HTMLFancyTabsElement;
    'progress-bar': HTMLProgressBarElement;
    'zpr-tab': HTMLZprTabElement;
    'zpr-tabs': HTMLZprTabsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
